@page "/directions/details"
@using Microsoft.EntityFrameworkCore
@using BlazorAcademy.Models
@inject IDbContextFactory<BlazorAcademy.Data.BlazorAcademyContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Direction</h2>
    <hr />
    @if (direction is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">direction_name</dt>
            <dd class="col-sm-10">@direction.direction_name</dd>
        </dl>
        <div>
            <a href="@($"/directions/edit?directionid={direction.direction_Id}")">Edit</a> |
            <a href="@($"/directions")">Back to List</a>
        </div>
    }
</div>

@code {
    private Direction? direction;

    [SupplyParameterFromQuery]
    private byte directionId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        direction = await context.Directions.FirstOrDefaultAsync(m => m.direction_Id == directionId);

        if (direction is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
